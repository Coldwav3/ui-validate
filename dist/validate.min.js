/*!
 * angular-ui-validate
 * https://github.com/angular-ui/ui-validate
 * Version: 1.1.0 - 2015-07-13T09:57:54.187Z
 * License: MIT
 */
!function(){"use strict";angular.module("ui.validate",[]).directive("uiValidate",function(a){return{restrict:"A",require:"ngModel",link:function(n,i,t,u){var e,r=n.$eval(t.uiValidate);r&&(angular.isString(r)&&(r={validator:r}),angular.forEach(r,function(a,i){e=function(t,e){var r=n.$eval(a,{$value:t,$modelValue:t,$viewValue:e,$name:u.$name});return angular.isObject(r)&&angular.isFunction(r.then)?(r.then(function(){u.$setValidity(i,!0)},function(){u.$setValidity(i,!1)}),!0):r},u.$validators[i]=e}),t.uiValidateWatch&&a(n,u,n.$eval(t.uiValidateWatch)))}}}).directive("uiValidateAsync",function(a,n,i){return{restrict:"A",require:"ngModel",link:function(n,t,u,e){var r,l=n.$eval(u.uiValidateAsync);l&&(angular.isString(l)&&(l={validatorAsync:l}),angular.forEach(l,function(a,t){r=function(t,u){var r=n.$eval(a,{$value:t,$modelValue:t,$viewValue:u,$name:e.$name});return angular.isObject(r)&&angular.isFunction(r.then)?r:i(function(a,n){setTimeout(function(){r?a():n()},0)})},e.$asyncValidators[t]=r}),u.uiValidateWatch&&a(n,e,n.$eval(u.uiValidateWatch)))}}}).service("$$uiValidateApplyWatch",function(){return function(a,n,i){angular.isString(i)?a.$watch(i,function(){n.$validate()}):angular.isArray(i)?angular.forEach(i,function(i){a.$watch(i,function(){n.$validate()})}):angular.isObject(i)&&angular.forEach(i,function(i){angular.isString(i)&&a.$watch(i,function(){n.$validate()}),angular.isArray(i)&&angular.forEach(i,function(i){a.$watch(i,function(){n.$validate()})})})}})}();